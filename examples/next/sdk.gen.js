
// This file is auto generated by 'actionapi' lib

import sdkFetch, { settings, setConfig } from "actionapi/lib/fetcher"

setConfig({ baseUrl: '/api' })

/**
  * onError middleware
  * @name onError
  * @function
  * @param {String} action action name that initiated the request
  * @param {Object=} error action's error
  */

/**
  * onSuccess middleware
  * @name onSuccess
  * @function
  * @param {String} action action name that initiated the request
  * @param {Object=} data action's respond
  * @returns {void}
  */

/**
  * setting global configuration to SDK generator
  * @param {Object} globalconfig config
  * @param {String=} globalconfig.baseUrl string
  * @param {onSuccess=} globalconfig.onSuccess funtion
  * @param {onError=} globalconfig.onFail function
  * @param {Boolean=} globalconfig.useSockets boolean
  */
export const setSdkConfig = (globalconfig) => setConfig(globalconfig);

export const SDK = {

getAllProducts: () => sdkFetch(`${settings.config.baseUrl}/products/`, {method: 'GET' }).then((res) => res.json()).then((data) => {settings.config.onSuccess && settings.config.onSuccess('getAllProducts', data)  ;return data}).catch(err => settings.config.onError && settings.config.onError('getAllProducts', err)),
getProduct: ({name}) => sdkFetch(`${settings.config.baseUrl}/products/name?name=${name || ""}`, {method: 'GET' }).then((res) => res.json()).then((data) => {settings.config.onSuccess && settings.config.onSuccess('getProduct', data)  ;return data}).catch(err => settings.config.onError && settings.config.onError('getProduct', err)),
getAllUsers: () => sdkFetch(`${settings.config.baseUrl}/users/`, {method: 'GET' }).then((res) => res.json()).then((data) => {settings.config.onSuccess && settings.config.onSuccess('getAllUsers', data)  ;return data}).catch(err => settings.config.onError && settings.config.onError('getAllUsers', err)),
getUser: ({name}) => sdkFetch(`${settings.config.baseUrl}/users/${name}`, {method: 'GET' }).then((res) => res.json()).then((data) => {settings.config.onSuccess && settings.config.onSuccess('getUser', data)  ;return data}).catch(err => settings.config.onError && settings.config.onError('getUser', err)),
addUser: ({name,age}) => sdkFetch(`${settings.config.baseUrl}/users/`, {method: 'POST' , body: {name,age}}).then((res) => res.json()).then((data) => {settings.config.onSuccess && settings.config.onSuccess('addUser', data)  ;return data}).catch(err => settings.config.onError && settings.config.onError('addUser', err)),

}